/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for portfolios and projects.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information, accessible only to the user.
 * - /portfolio/{portfolioId}: Stores portfolio data, accessible only to the user.
 * - /projects/{projectId}: Stores project data, accessible only to the user.
 *
 * Key Security Decisions:
 * - Users can only read and write their own user documents.
 * - Users can only read and write their own portfolio documents.
 * - Users can only create, read, update, and delete their own project documents.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows users to read and write their own user documents.
     * @path /users/{userId}
     * @allow (get, create, update, delete) if request.auth.uid == userId
     * @deny (get, create, update, delete) if request.auth.uid != userId
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Allows users to read and write their own portfolio documents.
     * @path /portfolio/{portfolioId}
     * @allow (get, create, update, delete) if request.auth.uid == portfolioId
     * @deny (get, create, update, delete) if request.auth.uid != portfolioId
     * @principle Enforces document ownership for all operations.
     */
    match /portfolio/{portfolioId} {
      function isOwner(portfolioId) {
        return request.auth != null && request.auth.uid == portfolioId;
      }
        allow get: if isOwner(portfolioId);
        allow list: if false;
        allow create: if isOwner(portfolioId);
        allow update: if isOwner(portfolioId);
        allow delete: if isOwner(portfolioId);
    }

    /**
     * @description Allows users to create, read, update, and delete their own project documents.
     * @path /projects/{projectId}
     * @allow (create) if request.auth != null
     * @allow (get, list, update, delete) if request.auth != null
     * @deny (create, get, list, update, delete) if request.auth == null
     * @principle Enforces document ownership for all operations.
     */
    match /projects/{projectId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }
  }
}